name: Deploy

on:
  push:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Create tar acrhive
        run: |
          mkdir ../publish
          cp -TR . ../publish
          tar -cf publish.tar ../publish/
      - name: Copy files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "publish.tar"
          target: "~/"
      - name: Run docker compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: | 
            rm -rf ~/publish
            tar -xf publish.tar -C ~/
            rm publish.tar
            cd publish
            cd client
            echo REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }} > .env
            cd ../server
            mkdir env
            cd env
            echo PORT=${{ secrets.PORT }} > production.env
            echo DB_URL=${{ secrets.DB_URL }} >> production.env
            echo CLIENT_URL=${{ secrets.CLIENT_URL }} >> production.env
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> production.env
            echo REGISTER_EMAIL_SERVICE=${{ secrets.REGISTER_EMAIL_SERVICE }} >> production.env
            echo REGISTER_EMAIL_LOGIN=${{ secrets.REGISTER_EMAIL_LOGIN }} >> production.env
            echo REGISTER_EMAIL_PASSWORD=${{ secrets.REGISTER_EMAIL_PASSWORD }} >> production.env
            echo EMAIL_SECRET=${{ secrets.EMAIL_SECRET }} >> production.env
            echo NODE_ENV=${{ secrets.NODE_ENV }} >> production.env
            cd ../..
            docker-compose down
            docker-compose -f docker-compose.yml up --build -d